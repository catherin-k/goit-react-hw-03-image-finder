{"version":3,"sources":["services/imagesApi.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/App.js","index.js"],"names":["currentPage","searchQuery","axios","get","then","response","data","hits","Searchbar","state","inputValue","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","console","log","props","onSubmit","className","this","type","placeholder","onChange","Component","ImageGalleryItem","smallImage","modalImage","getImage","src","alt","onClick","ImageGallery","images","openModal","map","id","webformatURL","largeImageURL","Button","text","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","showModal","isLoading","onSubmitSearchbar","query","fetchImages","options","imagesApi","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","error","finally","toggleModal","prevProps","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.892240b2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiKey = \"19947023-b7017f4974f73f87e742a194c\";\r\n\r\nconst fetchImages = ({ currentPage = 1, searchQuery = \"\" }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?key=${apiKey}&q=${searchQuery}&per_page=6&page=${currentPage}`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { fetchImages };\r\n","import React, { Component } from \"react\";\r\nimport \"./Searchbar.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ inputValue: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <label className=\"SearchForm-button-label\"></label>\r\n          </button>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search photos\"\r\n            className=\"SearchForm-input\"\r\n            onChange={this.handleChange}\r\n            value={this.state.inputValue}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nconst ImageGalleryItem = ({ smallImage, type, modalImage, getImage }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={smallImage}\r\n        alt={type}\r\n        onClick={() => getImage(modalImage)}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  smallImage: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  modalImage: PropTypes.string.isRequired,\r\n  getImage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\n\r\nimport \"./ImageGallery.css\";\r\n\r\nconst ImageGallery = ({ images, openModal, getImage }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, webformatURL, type, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          modalImage={largeImageURL}\r\n          smallImage={webformatURL}\r\n          type={type}\r\n          openModal={openModal}\r\n          getImage={getImage}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  openModal: PropTypes.func.isRequired,\r\n  getImage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ onClick, text }) => {\r\n  return (\r\n    <div className=\"btn__wrap\">\r\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\n\nimport imagesApi from \"../services/imagesApi\";\n\nimport Searchbar from \"./Searchbar\";\nimport ImageGallery from \"./ImageGallery\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\nimport Loader from \"react-loader-spinner\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    hits: [],\n    currentPage: 1,\n    searchQuery: \"\",\n    showModal: false,\n    modalImage: null,\n    isLoading: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onSubmitSearchbar = (query) => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      hits: [],\n    });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, currentPage } = this.state;\n\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n      .fetchImages(options)\n      .then((images) => {\n        this.setState((prevState) => ({\n          hits: [...prevState.hits, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      })\n      .catch((error) => console.log(error))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  getImage = (modalImage) => {\n    this.toggleModal();\n    this.setState({ modalImage });\n  };\n\n  render() {\n    const { hits, showModal, modalImage, isLoading } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onSubmitSearchbar} />\n\n        <ImageGallery\n          images={hits}\n          openModal={this.toggleModal}\n          getImage={this.getImage}\n        />\n\n        {isLoading && (\n          <Loader\n            className=\"Loader\"\n            type=\"Oval\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n          />\n        )}\n\n        {hits.length > 0 && !isLoading && (\n          <Button onClick={this.fetchImages} text=\"Load More\" />\n        )}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={modalImage} alt=\"\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}